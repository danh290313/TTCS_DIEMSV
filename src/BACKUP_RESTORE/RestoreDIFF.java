/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BACKUP_RESTORE;

import design.DataBaseHelper;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ADMIN
 */
public class RestoreDIFF extends javax.swing.JFrame {

    /**
     * Creates new form RestoreDIFF
     */
    public RestoreDIFF() {
        initComponents();
        txtRestoreDiff.setEnabled(false);
        txtRestoreFull.setEnabled(false);
        bnbRestore.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRestoreFull = new javax.swing.JTextField();
        txtRestoreDiff = new javax.swing.JTextField();
        bnbRestore = new javax.swing.JButton();
        bnbFileDiff = new javax.swing.JButton();
        bnbFileFull = new javax.swing.JButton();
        jButtonQuayLai = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("File Restore Full:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("FIle Restore Different:");

        bnbRestore.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bnbRestore.setText("Restore");
        bnbRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnbRestoreActionPerformed(evt);
            }
        });

        bnbFileDiff.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bnbFileDiff.setText("Chọn File");
        bnbFileDiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnbFileDiffActionPerformed(evt);
            }
        });

        bnbFileFull.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bnbFileFull.setText("Chọn File");
        bnbFileFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnbFileFullActionPerformed(evt);
            }
        });

        jButtonQuayLai.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonQuayLai.setText("Quay Lại ");
        jButtonQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuayLaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtRestoreFull, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(txtRestoreDiff))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bnbFileFull, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(bnbFileDiff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(88, 88, 88))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(170, Short.MAX_VALUE)
                .addComponent(jButtonQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(bnbRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRestoreFull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bnbFileFull))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(bnbFileDiff))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRestoreDiff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonQuayLai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bnbRestore, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bnbRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnbRestoreActionPerformed
        // TODO add your handling code here:
        //String pth = txtRestoreFull.getText();
//        if (!pth.endsWith(".bak")) {
//            
//            txttb.setVisible(true);
//            return;
//        }
//        File temp = new File(txtRestoreFull.getText());
//        File temp1=new File(txtRestoreDiff.getText());
//        if (!temp.getPath().endsWith(".bak")){
//            txttb.setText("File backup không hợp lệ ");
//            return;
//        }
//        if (!temp.exists()) {
//            txttb.setText("File backup không tồn tại.");
//            return;
//        }
//         if (!temp1.getPath().endsWith(".bak")){
//            txttb.setText("File backup không hợp lệ ");
//            return;
//        }
//        if (!temp1.exists()) {
//            txttb.setText("File backup không tồn tại.");
//            return;
//        }
//      String sql="USE [master];" +
//"ALTER DATABASE [qldiem2] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;" +
//"RESTORE DATABASE [qldiem2] FROM  DISK = N'" + temp.getAbsolutePath() +"' WITH  FILE = 1, NORECOVERY,  NOUNLOAD,  REPLACE,  STATS = 5;" +
//"RESTORE DATABASE [qldiem2] FROM  DISK = N'" + temp1.getAbsolutePath() +"' WITH  FILE = 1,  NOUNLOAD,  STATS = 5;"+
//              "ALTER DATABASE [qldiem2] SET MULTI_USER";
    String sql = "USE master; SET NOCOUNT ON; " +
        

        "BEGIN TRY " +
        " " +
        "ALTER DATABASE [qldiem] SET SINGLE_USER WITH ROLLBACK IMMEDIATE ;" +
        " BACKUP DATABASE [qldiem] TO  DISK = N'C:\\backup\\FileGoc.bak' WITH NOFORMAT, INIT,  NAME = N'qldiem-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,  STATS = 10 " +
        " RESTORE DATABASE [qldiem] FROM  DISK = '"+ txtRestoreFull.getText() +"' WITH  FILE = 1,  NORECOVERY,  NOUNLOAD,  REPLACE,  STATS = 5; " +
        " RESTORE DATABASE [qldiem] FROM  DISK = '" + txtRestoreDiff.getText() + "' WITH  FILE = 1,  NOUNLOAD,  STATS = 5; " +
        " ALTER DATABASE [qldiem] SET MULTI_USER; " +
        " SELECT '1' as kq; " +
        " END TRY " +
        " BEGIN CATCH " +
        " IF(@@ERROR <> 0) " +
        "	BEGIN " +
        
        "	        drop database qldiem; " +
        "		RESTORE DATABASE [qldiem] FROM  DISK = N'C:\\backup\\FileGoc.bak' WITH  FILE = 1,  NOUNLOAD,  STATS = 5 " +
        
        "		SELECT '0' as kq" +
        "	END " +
        " END CATCH ";
        

        try {
             long start, end;
            start = System.currentTimeMillis();
            Connection con = DataBaseHelper.getConnection();
            PreparedStatement smt = con.prepareStatement(sql);
         
            ResultSet rs = smt.executeQuery();
            if (rs.next()) 
            {
              if (rs.getString(1).equals("0")) 
              {
                  JOptionPane.showMessageDialog(this, "Restore That bai!!!");
                  return;
              }
              else
              {
                  JOptionPane.showMessageDialog(this, "Restore Thanh Cong!!!"); 
                  return;
              }
              
            }

             end = System.currentTimeMillis();
         // start lấy thời gian theo millisecond
      //vòng lặp không thực hiện thêm lệnh nào
          // start lấy thời gian theo millisecond
           System.out.println("Time Millis: " + (end - start));
        // tạo 1 đối tượng có định dạng thời gian yyyy-MM-dd HH:mm:ss
    

        } catch (Exception e) {
             e.printStackTrace();
             
        }
    }//GEN-LAST:event_bnbRestoreActionPerformed

    private void bnbFileDiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnbFileDiffActionPerformed
        // TODO add your handling code here:
        JFileChooser choose = new JFileChooser();
        choose.setCurrentDirectory(new File("C:\\backup"));
        FileNameExtensionFilter ff = new FileNameExtensionFilter("File", "bak");
        choose.setFileFilter(ff);
        int x = choose.showDialog(this, "Chọn File");
        if(x == JFileChooser.APPROVE_OPTION)
        {
            String f =  choose.getSelectedFile().getAbsolutePath();
            txtRestoreDiff.setText(f);
        }
        if(txtRestoreDiff.getText().equals("") || txtRestoreFull.getText().equals(""))
            bnbRestore.setEnabled(false);
        else
            bnbRestore.setEnabled(true);
    }//GEN-LAST:event_bnbFileDiffActionPerformed

    private void bnbFileFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnbFileFullActionPerformed
        // TODO add your handling code here:
        JFileChooser choose = new JFileChooser();
        choose.setCurrentDirectory(new File("C:\\backup"));
        FileNameExtensionFilter ff = new FileNameExtensionFilter("File", "bak");
        choose.setFileFilter(ff);
        int x = choose.showDialog(this, "Chọn File");
        if(x == JFileChooser.APPROVE_OPTION)
        {
            String f =  choose.getSelectedFile().getAbsolutePath();
            txtRestoreFull.setText(f);
        }
        if(txtRestoreDiff.getText().equals("") || txtRestoreFull.getText().equals(""))
            bnbRestore.setEnabled(false);
        else
            bnbRestore.setEnabled(true);
    }//GEN-LAST:event_bnbFileFullActionPerformed

    private void jButtonQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuayLaiActionPerformed
        // TODO add your handling code here:
        int click = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn quay lại.");
        if (click == JOptionPane.OK_OPTION) {
            this.setVisible(false);
            new FormBackUp().setVisible(true);;
        }
    }//GEN-LAST:event_jButtonQuayLaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestoreDIFF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestoreDIFF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestoreDIFF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestoreDIFF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestoreDIFF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnbFileDiff;
    private javax.swing.JButton bnbFileFull;
    private javax.swing.JButton bnbRestore;
    private javax.swing.JButton jButtonQuayLai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtRestoreDiff;
    private javax.swing.JTextField txtRestoreFull;
    // End of variables declaration//GEN-END:variables
}
